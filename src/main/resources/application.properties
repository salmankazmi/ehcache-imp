# Enable those entities marked with @Cacheable to be cached
#spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
# Enables second level cache
#spring.jpa.properties.hibernate.cache.use_second_level_cache=true
# Enable query cache
#spring.jpa.properties.hibernate.cache.use_query_cache=true

#spring.jpa.properties.hibernate.cache.region.factory_class= net.sf.ehcache.hibernate.EhCacheRegionFactory 

logging.level.org.hibernate.SQL=debug


# Generate statistics to see effects of second level cache
spring.jpa.properties.hibernate.generate_statistics=true
# Make session metrics/statistics logging less noisy
logging.level.org.hibernate.engine.internal.StatisticalLoggingSessionEventListener=ERROR

# Connection url for the database "test_db"
spring.datasource.url = jdbc:mysql://localhost:3306/test_db?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = root

# ===============================
# = JPA / HIBERNATE
# ===============================

# Show or not log for each sql query
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
